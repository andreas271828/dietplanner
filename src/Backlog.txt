-   Improve optimisation algorithm
        generateCandidate4():
            Address one score at a time (the one that is furthest from its optimum).
            Add a portion of a random ingredient.
                Better score? Continue with poorest score.
                Same or worse score? Remove a portion of the same ingredient.
                    Better score (than original)? Continue with poorest score.
                    Same or worse score (than original)? Remove ingredient from variable list and continue with different ingredient.
            No more ingredients to adjust? Try the same with one more portion and continue until improvement has been made or all limits have been reached.
            After each improvement check the total score and remember diet plan with best total score.
        See TODOs.
-   Refactor code
-   Improve and use custom meal templates
-   Write tests (to test correctness but also execution time; avoid randomness; e.g. calculating requirements; use JUnit?)
-   Create user interface (run evolutionary algorithm in background)
-   Improve parameterisation, calculation of criteria (consider TODOs, "Ketogenic diets and physical performance.pdf", No-Meat-Athlete-Cheat-Sheet1.jpg, http://www.ewg.org/foodnews/list.php), etc.
-   About, warnings and information (only a calculator, ask a professional, use organic products and ethical sources, water, water filter, different types of fat, heating fat, cholesterol)
-   Parallel computation
